// form
.form {
    @include row-gap(24px);

    &__footer {
        display: flex;
        justify-content: space-between;
        @include row-gap(24px);

        @include sm {
            display: flex;
            flex-direction: column;
            @include row-gap(24px);
        }
    }
}

.form-input {
    width: 100%;
    position: relative;

    &__input {
        outline: none;
        border: 1px solid $black600;
        border-radius: 3px;
        background-color: $white;
        @include averageFont();
        color: $black;
        
        width: 100%;
        height: 48px;
        padding: 12px 24px;

        transition: border 0.1s ease-out, color 0.1s ease-out;
        &:focus {
            border: 1px solid $orange500;
        }
        &::placeholder {
            @include averageFont();
            color: $black600;
        }
    }

    &._error {
        .form-input__input {
            border: 1px solid $redError;
        }
    }
}
.textarea {
    width: 100%;
    position: relative;

    &__input {
        border: none;
        outline: none;
        resize: none;
        border: 1px solid $black600;
        border-radius: 3px;
        background-color: $white;
        @include averageFont();
        color: $black;

        width: 100%;
        height: 96px;
        padding: 12px 24px;

        transition: border 0.1s ease-out;
        &:focus {
            border: 1px solid $orange500;
        }
        &::placeholder {
            @include averageFont();
            color: $black600;
        }
        
        &::-webkit-scrollbar {
            display: none;
        }
    }
}

.file-field {
    border: 1px solid transparent;
    border-radius: 3px;
    background-color: $black800;
    @include averageFont();
    color: $white;

    width: 100%;
    height: 48px;
    // padding: 16px;
    position: relative;

    &.file-active {
        .file-field__wrapper {
            cursor: default;
        }
        .file-field__file-name {
            color: $white;
        }
        .file-field__button_upload {
            display: none;
        }
        .file-field__button_delete {
            display: block;
        }
    }

    &__wrapper {
        cursor: pointer;//
        width: 100%;
        height: 100%;
        padding: 12px 24px;
        position: relative;

        display: flex;
        align-items: center;
    }
    &__button {
        position: absolute;
        top: 12px;
        right: 12px;

        cursor: pointer;

        &_upload {
            display: block;
        }
        &_delete {
            display: none;
        }

        img,
        svg {
            display: block;

            width: 24px;
            height: 24px;
        }
    }
    // &__file-name {
    //     @include averageFont();
    //     color: $inputPlaceholder;
    // }
    //
    &__name {
        @include averageFont();
        color: $black600;

        width: 100%;
        padding-right: 24px;

        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    //
    
    &._error {
        border: 1px solid $redError;

        .file-field__type {
            color: $redError;
        }
    }
}
.checkbox {
    // min-height: 24px;
    padding-left: 36px;

    display: flex;
    @include column-gap(24px);

    position: relative;
    cursor: pointer;

    &__name {
        @include averageFont();
        color: $white;

        a {
            border-bottom: 1px solid $white;
            padding-bottom: 1px;
        }
    }
    &__box {
        // hide the browser's default checkbox
        cursor: pointer;
        height: 0;
        width: 0;
        position: absolute;
        opacity: 0;
    
        // show the checkmark when checked
        &:checked ~ .checkbox__mark:after {
            // display: block;
            opacity: 1;
            transform: rotate(45deg) scale(1);
            transition: transform 0.4s $easeOut, opacity 0.25s $easeOut;
        }
    }
    
    &__mark {
        // create a custom checkbox
        position: absolute;
        top: 2px;
        left: 0;
        width: 18px;
        height: 18px;
        background-color: $white;
        border: 1px solid $white;
        border-radius: 1px;
        transition: all 0.1s ease-out;
    
        // create and style the checkmark/indicator (hidden when not checked) 
        &:after {
            content: "";
            // display: none;
    
            border: solid $orange500;
            border-width: 0 2px 2px 0;
    
            position: absolute;
            left: 4px;
            top: -1px;

            width: 6px;
            height: 10px;
            // transform: rotate(45deg);
            
            opacity: 0;
            transform: rotate(45deg) scale(0);
            transition: transform 0.1s $easeOut, opacity 0.1s $easeOut;
        }
    }

    &._error {
        .checkbox__mark {
            border: 1px solid $redError;
            background-color: rgba($color: $redError, $alpha: 0.25);
        }
    }
}


// subscribe-block input
.subscribe-input {
    border: 1px solid $white;
    border-radius: 5px;

    width: 100%;
    height: 48px;
    padding: 12px;
    position: relative;

    display: flex;
    justify-content: space-between;
    align-items: center;

    &__input {
        border: none;
        outline: none;
        background-color: transparent;
        @include averageFont();
        color: $white;
        
        width: 100%;
        height: 100%;

        &::placeholder {
            @include averageFont();
            color: $orange600;
        }
    }

    &__button {
        cursor: pointer;
        border: none;
        outline: none;
        background-color: transparent;

        margin-left: 8px;

        img,
        svg {
            display: block;
            width: 24px;
            height: 24px;
        }
    }

    &._error {
        &.subscribe-input {
            border: 1px solid $white;
        }
        .failure__text {
            color: $white;
        }
    }
}
//
.failure {
    display: flex;

    position: absolute;
    bottom: -20px; // 0;
    right: 0;
    z-index: 2;

    opacity: 0;
    transition: opacity 0.15s ease-out;

    &._error {
        opacity: 1;
    }

    &__text {
        @include smallFont();
        color: $redError;
    }
}